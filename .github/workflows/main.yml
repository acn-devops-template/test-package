name: main # on main branch

on:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  cd-pipeline:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-20.04

    steps:
      - name: checkout for PR
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}
          token: ${{ secrets.GITHUB_TOKEN }}

      - uses: fregante/setup-git-user@v1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install pip
        run: |
          pip install --upgrade pip

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.4.2

      - name: Check project version for prod release
        id: check-prod-release
        run: |
          echo "PROD_RELEASE_BOOL=false" >> $GITHUB_OUTPUT

          pk_version=$(poetry version --dry-run -s)
          echo $pk_version
          echo "PROJECT_PACKAGE_VERSION=$pk_version" >> $GITHUB_OUTPUT

          prod_release_regex="^[0-9]+\.[0-9]+\.[0-9]+"
          if [[ $pk_version =~ $prod_release_regex ]]
          then
              echo "PROD_RELEASE_BOOL=true" >> $GITHUB_OUTPUT
          fi

      - name: Tag for prod
        if: steps.check-prod-release.outputs.PROD_RELEASE_BOOL == 'true'
        run: |
          version_number=v${{ steps.check-prod-release.outputs.PROJECT_PACKAGE_VERSION }}
          echo ${version_number}
          git tag -a -m ${version_number} ${version_number}
          git push origin --tags

      
  main-docs-pipeline:
    needs: cd-pipeline
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}

      - uses: fregante/setup-git-user@v1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install pip
        run: |
          pip install --upgrade pip

      - name: Install poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.6.1

      - name: Install dependencies and project
        run: |
          poetry install -v --only docs --no-root

      - name: Mike Deploy to gh-pages
        run: |
          A="$(echo $(poetry version --dry-run -s) | cut -d'.' -f1)"
          B="$(echo $(poetry version --dry-run -s) | cut -d'.' -f2)"
          echo "${A}.${B}"
          poetry run mike deploy --push --update-aliases ${A}.${B} latest