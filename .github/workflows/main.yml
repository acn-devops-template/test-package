name: main

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main

jobs:
  cd-pipeline:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest

    env:
      GH_TOKEN: ${{ secrets.GH_PAT }} # for semantic release

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}

      - uses: webfactory/ssh-agent@v0.6.0
        with:
          ssh-private-key: |
            ${{ secrets.SEMANTIC_RELEASE_PRIVATE_KEY }}
            ${{ secrets.UTILS_DATA_LAYER_SSH_KEY }}

      - uses: fregante/setup-git-user@v1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install pip
        run: |
          pip install --upgrade pip

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies and project
        run: |
          poetry install -v --without test,badge

      - name: Semantic Release
        run: |
          poetry run semantic-release publish -v DEBUG

      - name: Sync back to Dev
        run: |
          git checkout dev
          git merge ${{ github.event.pull_request.base.ref }}
          git push

      - name: Sync back to Staging
        run: |
          git checkout staging
          git merge ${{ github.event.pull_request.base.ref }}
          git push
          git checkout ${{ github.event.pull_request.base.ref }}

  main-badge-pipeline:
    if: ${{ (success() || failure()) && (github.event.pull_request.merged == true) }}
    needs: cd-pipeline
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}

      - uses: fregante/setup-git-user@v1

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"

      - name: Install pip
        run: |
          pip install --upgrade pip

      - name: Install poetry
        uses: snok/install-poetry@v1

      - name: Install dependencies and project
        run: |
          poetry install -v --only badge

      - name: Generate badges
        run: |
          poetry run interrogate --generate-badge ./icons --badge-format svg

      - name: Commit if changes
        run: |
          git diff --quiet && git diff --staged --quiet || git commit -am 'gen badges'
          git push
